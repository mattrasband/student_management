buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-release" }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'

mainClassName = 'com.mattrasband.mgmt.StudentManager'

war {
    baseName = 'student-management'
    version = '0.0.1'
    manifest {
        attributes 'Main-Class': 'com.mattrasband.mgmt.StudentManager'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/libs-release" }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")

    // If you wanted a real database, you would define the props in
    // application.yml for the database info and uncomment these. On boot
    // this will auto apply the migrations at src/main/resources/db/migrations/*
    // for you (flyway)
//    compile("org.flywaydb:flyway-core")
//    compile("org.postgresql:postgresql")

    // This is just to make runtime really simple, it's an embedded
    // in-memory database. Data will be lost across runs.
    runtime("org.hsqldb:hsqldb")

    compile("com.google.guava:guava:21.0")

    providedCompile("org.projectlombok:lombok")
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

